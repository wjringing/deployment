import React from 'react';
import { Plus, Trash2, Settings, Users, Target, MapPin, Clock, Save } from 'lucide-react';

const SettingsPage = ({
  supabaseStaff,
  supabasePositions,
  supabaseTargets,
  templateShifts,
  newStaff,
  setNewStaff,
  newPosition,
  setNewPosition,
  newTarget,
  setNewTarget,
  newTemplateShift,
  setNewTemplateShift,
  uiLoading,
  onAddStaff,
  onRemoveStaff,
  onAddPosition,
  onRemovePosition,
  onUpdatePosition,
  onAddTarget,
  onUpdateTarget,
  onRemoveTarget,
  onAddTemplateShift,
  onRemoveTemplateShift
}) => {
  return (
    <div className="space-y-8">
      <div className="flex items-center gap-3 mb-6">
        <Settings className="w-8 h-8 text-red-600" />
        <h2 className="text-3xl font-bold text-gray-900">System Settings</h2>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Staff Management */}
        <div className="bg-white rounded-lg shadow-sm border p-6">
          <div className="flex items-center gap-3 mb-4">
            <Users className="w-6 h-6 text-blue-600" />
            <h3 className="text-xl font-semibold text-gray-900">Staff Management</h3>
          </div>
          
          {/* Add Staff Form */}
          <div className="mb-6 p-4 bg-gray-50 rounded-lg">
            <h4 className="font-medium text-gray-900 mb-3">Add New Staff Member</h4>
            <div className="space-y-3">
              <input
                type="text"
                placeholder="Staff name"
                value={newStaff.name}
                onChange={(e) => setNewStaff({ ...newStaff, name: e.target.value })}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
              <label className="flex items-center gap-2">
                <input
                  type="checkbox"
                  checked={newStaff.is_under_18}
                  onChange={(e) => setNewStaff({ ...newStaff, is_under_18: e.target.checked })}
                  className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
                />
                <span className="text-sm text-gray-700">Under 18 years old</span>
              </label>
              <button
                onClick={onAddStaff}
                disabled={uiLoading || !newStaff.name.trim()}
                className="w-full bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg flex items-center justify-center gap-2"
              >
                <Plus className="w-4 h-4" />
                Add Staff
              </button>
            </div>
          </div>

          {/* Staff List */}
          <div className="space-y-2 max-h-64 overflow-y-auto">
            {supabaseStaff.map((staff) => (
              <div key={staff.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                <div>
                  <span className="font-medium text-gray-900">{staff.name}</span>
                  {staff.is_under_18 && (
                    <span className="ml-2 px-2 py-1 bg-yellow-100 text-yellow-800 text-xs rounded-full">
                      Under 18
                    </span>
                  )}
                </div>
                <button
                  onClick={() => onRemoveStaff(staff.id)}
                  disabled={uiLoading}
                  className="text-red-600 hover:text-red-800 p-1"
                >
                  <Trash2 className="w-4 h-4" />
                </button>
              </div>
            ))}
          </div>
        </div>

        {/* Position Management */}
        <div className="bg-white rounded-lg shadow-sm border p-6">
          <div className="flex items-center gap-3 mb-4">
            <MapPin className="w-6 h-6 text-green-600" />
            <h3 className="text-xl font-semibold text-gray-900">Position Management</h3>
          </div>
          
          {/* Add Position Form */}
          <div className="mb-6 p-4 bg-gray-50 rounded-lg">
            <h4 className="font-medium text-gray-900 mb-3">Add New Position</h4>
            <div className="space-y-3">
              <input
                type="text"
                placeholder="Position name"
                value={newPosition.name}
                onChange={(e) => setNewPosition({ ...newPosition, name: e.target.value })}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
              />
              <select
                value={newPosition.type}
                onChange={(e) => setNewPosition({ ...newPosition, type: e.target.value })}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
              >
                <option value="position">Position</option>
                <option value="pack_position">Pack Position</option>
                <option value="area">Area</option>
                <option value="cleaning_area">Cleaning Area</option>
              </select>
              <button
                onClick={onAddPosition}
                disabled={uiLoading || !newPosition.name.trim()}
                className="w-full bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg flex items-center justify-center gap-2"
              >
                <Plus className="w-4 h-4" />
                Add Position
              </button>
            </div>
          </div>

          {/* Position List */}
          <div className="space-y-2 max-h-64 overflow-y-auto">
            {supabasePositions.map((position) => (
              <div key={position.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                <div>
                  <span className="font-medium text-gray-900">{position.name}</span>
                  <span className="ml-2 px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full">
                    {position.type.replace('_', ' ')}
                  </span>
                </div>
                <button
                  onClick={() => onRemovePosition(position.id)}
                  disabled={uiLoading}
                  className="text-red-600 hover:text-red-800 p-1"
                >
                  <Trash2 className="w-4 h-4" />
                </button>
              </div>
            ))}
          </div>
        </div>

        {/* Target Management */}
        <div className="bg-white rounded-lg shadow-sm border p-6">
          <div className="flex items-center gap-3 mb-4">
            <Target className="w-6 h-6 text-purple-600" />
            <h3 className="text-xl font-semibold text-gray-900">Target Management</h3>
          </div>
          
          {/* Add Target Form */}
          <div className="mb-6 p-4 bg-gray-50 rounded-lg">
            <h4 className="font-medium text-gray-900 mb-3">Add New Target</h4>
            <div className="space-y-3">
              <input
                type="text"
                placeholder="Target name"
                value={newTarget.name}
                onChange={(e) => setNewTarget({ ...newTarget, name: e.target.value })}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
              />
              <input
                type="text"
                placeholder="Target value"
                value={newTarget.value}
                onChange={(e) => setNewTarget({ ...newTarget, value: e.target.value })}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
              />
              <input
                type="number"
                placeholder="Priority (1-10)"
                min="1"
                max="10"
                value={newTarget.priority}
                onChange={(e) => setNewTarget({ ...newTarget, priority: parseInt(e.target.value) || 1 })}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
              />
              <button
                onClick={onAddTarget}
                disabled={uiLoading || !newTarget.name.trim() || !newTarget.value.trim()}
                className="w-full bg-purple-600 hover:bg-purple-700 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg flex items-center justify-center gap-2"
              >
                <Plus className="w-4 h-4" />
                Add Target
              </button>
            </div>
          </div>

          {/* Target List */}
          <div className="space-y-2 max-h-64 overflow-y-auto">
            {supabaseTargets
              .sort((a, b) => (a.priority || 0) - (b.priority || 0))
              .map((target) => (
                <div key={target.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                  <div>
                    <span className="font-medium text-gray-900">{target.name}</span>
                    <span className="ml-2 text-gray-600">{target.value}</span>
                    <span className="ml-2 px-2 py-1 bg-purple-100 text-purple-800 text-xs rounded-full">
                      Priority {target.priority || 1}
                    </span>
                  </div>
                  <button
                    onClick={() => onRemoveTarget(target.id)}
                    disabled={uiLoading}
                    className="text-red-600 hover:text-red-800 p-1"
                  >
                    <Trash2 className="w-4 h-4" />
                  </button>
                </div>
              ))}
          </div>
        </div>

        {/* Template Shifts */}
        <div className="bg-white rounded-lg shadow-sm border p-6">
          <div className="flex items-center gap-3 mb-4">
            <Clock className="w-6 h-6 text-orange-600" />
            <h3 className="text-xl font-semibold text-gray-900">Template Shifts</h3>
          </div>
          
          {/* Add Template Shift Form */}
          <div className="mb-6 p-4 bg-gray-50 rounded-lg">
            <h4 className="font-medium text-gray-900 mb-3">Add New Template Shift</h4>
            <div className="space-y-3">
              <input
                type="text"
                placeholder="Shift name"
                value={newTemplateShift.name}
                onChange={(e) => setNewTemplateShift({ ...newTemplateShift, name: e.target.value })}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent"
              />
              <div className="grid grid-cols-2 gap-3">
                <input
                  type="time"
                  placeholder="Start time"
                  value={newTemplateShift.startTime}
                  onChange={(e) => setNewTemplateShift({ ...newTemplateShift, startTime: e.target.value })}
                  className="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent"
                />
                <input
                  type="time"
                  placeholder="End time"
                  value={newTemplateShift.endTime}
                  onChange={(e) => setNewTemplateShift({ ...newTemplateShift, endTime: e.target.value })}
                  className="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent"
                />
              </div>
              <select
                value={newTemplateShift.type}
                onChange={(e) => setNewTemplateShift({ ...newTemplateShift, type: e.target.value })}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent"
              >
                <option value="Day Shift">Day Shift</option>
                <option value="Night Shift">Night Shift</option>
              </select>
              <button
                onClick={onAddTemplateShift}
                disabled={uiLoading || !newTemplateShift.name.trim() || !newTemplateShift.startTime || !newTemplateShift.endTime}
                className="w-full bg-orange-600 hover:bg-orange-700 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg flex items-center justify-center gap-2"
              >
                <Plus className="w-4 h-4" />
                Add Template Shift
              </button>
            </div>
          </div>

          {/* Template Shift List */}
          <div className="space-y-2 max-h-64 overflow-y-auto">
            {templateShifts.map((shift) => (
              <div key={shift.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                <div>
                  <span className="font-medium text-gray-900">{shift.name}</span>
                  <span className="ml-2 text-gray-600">{shift.startTime} - {shift.endTime}</span>
                  <span className="ml-2 px-2 py-1 bg-orange-100 text-orange-800 text-xs rounded-full">
                    {shift.type}
                  </span>
                </div>
                <button
                  onClick={() => onRemoveTemplateShift(shift.id)}
                  disabled={uiLoading}
                  className="text-red-600 hover:text-red-800 p-1"
                >
                  <Trash2 className="w-4 h-4" />
                </button>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default SettingsPage;